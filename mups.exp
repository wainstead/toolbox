#!/usr/bin/expect

# $Id: mups.exp,v 1.4 2005/11/02 19:32:06 swain Exp $

set timeout 25

# Get the password from the user.
send "Password: "                ;# prompt user for password
stty -echo                       ;# turn off echoing
expect -re "..+"                 ;# expect input matching this regexp
set passwd $expect_out(buffer)   ;# set variable 'passwd'
stty echo                        ;# turn echoing back on

spawn "/usr/bin/screen"
expect "to end"
send "\r"
expect "swain"                   ;# match my shell prompt

# need to wrap this in a proc...
send "ssh mup-1.fortunecity.com\r"
expect "assword"
send "$passwd\r"
expect "Fozzy"
send "sudo -s\r"
expect {
    "assword" {
        send "$passwd\r";
        expect "root"
    }
    "root" ;#  do nothing. we are already root.
}
send "cd /opt/apache/logs\r"
expect "logs"
send "tail -f `ls -tr *error* | tail -1` | grep -v 'File does not exist: /mnt/cel-1/vol01/linkless/gallery/1'\r"
send "S	c"             ;# split screen, switch to it, start bash

expect "etelone"
send "ssh mup-2.fortunecity.com\r"
expect "assword"
send "$passwd\r"
expect "Gonzo"
send "sudo -s\r"
expect {
    "assword" {
        send "$passwd\r";
        expect "root"
    }
    "root" ;#  do nothing. we are already root.
}
send "cd /opt/apache/logs\r"
expect "logs"
send "tail -f `ls -tr *error* | tail -1` | grep -v 'File does not exist: /mnt/cel-1/vol01/linkless/gallery/1'\r"
send "S	c"             ;# split screen, switch to it, start bash

expect "etelone"
send "ssh mup-3.fortunecity.com\r"
expect "assword"
send "$passwd\r"
expect "beaker"
send "sudo -s\r"
expect {
    "assword" {
        send "$passwd\r";
        expect "root"
    }
    "root" ;#  do nothing. we are already root.
}

send "cd /opt/apache/logs\r"
expect "logs"
send "tail -f `ls -tr *error* | tail -1` | grep -v 'File does not exist: /mnt/cel-1/vol01/linkless/gallery/1'\r"



interact
puts "mups.exp done."

# $Id: mups.exp,v 1.4 2005/11/02 19:32:06 swain Exp $