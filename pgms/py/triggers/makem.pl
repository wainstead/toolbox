#!/usr/bin/perl

# Given an input file that is a list of tables, print out two SQL
# files: one for creating a central table to track INSERTs and UPDATEs
# to the tables passed into this script; and the other file is also an
# SQL file but it undoes what the first SQL files does (i.e. DROPs all
# the things CREATEd by the first SQL script).

# usage: just run this script with no arguments

# 'tables.out' was generated by running \dt and hand editing the
# output
open INPUTFILE, 'tables.out' or die $!;

# run these files in psql, via "\i filename"
open TRIGGERS, '> triggers.sql' or die $!;
open UNDOTRIGGERS, '> undotriggers.sql' or die $!;



    print TRIGGERS <<'EOLN';
\set ON_ERROR_STOP
BEGIN;
CREATE TABLE table_update_log(relname name, last_updated timestamp NOT NULL DEFAULT now());


CREATE FUNCTION stamp_update_log() RETURNS TRIGGER LANGUAGE 'plpgsql' AS $$
BEGIN
  INSERT INTO table_update_log (relname) VALUES(TG_TABLE_NAME);
  RETURN NEW;
END
$$;

EOLN


print UNDOTRIGGERS <<'EOLN';
\set ON_ERROR_STOP
BEGIN;
EOLN

while ($table = <INPUTFILE>) {
    chomp $table;
    $trigger_name = "${table}_trg";

    print TRIGGERS<<"EOLN";
CREATE TRIGGER $trigger_name AFTER INSERT OR UPDATE ON nfmc.$table FOR EACH ROW EXECUTE PROCEDURE stamp_update_log();
EOLN

    print UNDOTRIGGERS "DROP TRIGGER IF EXISTS $trigger_name ON nfmc.$table;\n";
}


print UNDOTRIGGERS <<'EOLN';
DROP FUNCTION IF EXISTS stamp_update_log();
DROP TABLE IF EXISTS table_update_log;
DELETE FROM public.webspace_deleteable_tables WHERE schema_name='nfmc' AND table_name='table_update_log';
EOLN


    print TRIGGERS <<'EOLN';
INSERT INTO public.webspace_deleteable_tables VALUES ('nfmc', 'table_update_log');
SELECT public.grant_to_webspace('nfmc', 'nfmc', true, true);
SELECT public.grant_to_webspace('nfmc', 'public', false, false);
EOLN


    print TRIGGERS "COMMIT;\n";
    print UNDOTRIGGERS "COMMIT;\n";
